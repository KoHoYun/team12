package simple_merge;

import java.awt.Color;
import java.io.*;
import java.util.*;

import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Element;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import javax.swing.text.Utilities;

public class Compare {

   private int[][] LCStable;
   private int lineNum=0;
   private int sameline = 0;
   private int spaceNum;
   private int offset;
   private int offset2;
   
   public Compare(JTextPane first, JTextPane second) throws IOException, Exception {
      
      StringReader read = new StringReader(first.getText());
      StringReader read2 = new StringReader(second.getText());

      BufferedReader reader = new BufferedReader(read);
      BufferedReader reader2 = new BufferedReader(read2);
      
      Scanner s = new Scanner(reader);
      Scanner s2 = new Scanner(reader2);

      String line = null;
      String line2 = null;
      String whenNull ="                                 ";
      int i;
      /*
      if(!s.hasNextLine() && !s2.hasNextLine()) {//두파일 모두 빈경우
         System.out.println("identical");//팝업창 만들어야되용
      }
      StyledDocument doc = first.getStyledDocument();
      Element element = doc.getDefaultRootElement();
     
      Element young = element.getElement(1); 
      Element young1 = element.getElement(2); 

      int start = young.getStartOffset();
      int end = young.getEndOffset();
      
      System.out.println(young.getStartOffset());
      System.out.println(young1.getStartOffset());
      
      System.out.println(young.getEndOffset());
      System.out.println(young1.getEndOffset());
      
      String Line = doc.getText(start, end);
      
      System.out.println(Line);
      int offs1=Utilities.getRowEnd(first,60); 
      System.out.println("offset 60의 마지막인덱스는" + offs1);
      int line1 = 0;
       try {
           int offs=60;
           while( offs>0) {
               offs=Utilities.getRowStart(first,offs)-1; // 오프셋으로 로우스타트 알 수 있음
               line1++;
           }
       } catch (BadLocationException e) {
           e.printStackTrace();
       }
       
       String g = first.getText(60,65);
       System.out.println(line1+"번째 줄"+"text는 "+g);
      
                
       System.out.println(element.getStartOffset());
      System.out.println(element.getEndOffset());
     */
      //줄넘버를 받을수있나...
      offset = getOffset(first);
      offset2 = getOffset(second);
         
      while (s.hasNextLine() && s2.hasNextLine()) {
        line= s.nextLine();
        line2 =s2.nextLine();
        
         lineNum++;
         if(LCS(line,line2)!=MAX(line.length(),line2.length())) {//두 문자열이 다른경우들

            if(line.length()!=0 &&line2.length()!=0) {//두 문자들이 다를경우
               sameline = hasEqual(lineNum, line,second);
               spaceNum =sameline-lineNum;
               
               if(spaceNum==0) {//왼쪽문자가 오른쪽 파일에 없다.
                  sameline = hasEqual(lineNum, line2,first);
                  
                  if(spaceNum ==0) {//밑에 다른문자 없고 그냥 그 줄에서 다른 문자일 경우
                     /*
                      * 왼쪽, 오른쪽 노란색
                      */
                     inLineDiff(line, line2, first, second);
               
                  }
                  
                  else {//left파일에서 right파일의 lineNum이 다른곳에서 존재함. 공백생긴다.
                     //오른쪽문자가 왼쪽 파일에 있다.
                     for(i=0;i<spaceNum;i++) {
                        if(line.length() != 0) {
                           insert(first, Color.BLACK,Color.YELLOW,line);
                        }
                        else {
                           insert(first, Color.BLACK,Color.YELLOW,whenNull);
                        }
                        insert(second, Color.BLACK,Color.GRAY,whenNull);
                        if(s.hasNextLine()) {
                           line = s.nextLine();
                        }
                     }
                     insert(first, Color.BLACK,Color.WHITE,line);
                     insert(second, Color.BLACK,Color.WHITE,line2);
               }
              }
               else {//right파일에서 left파일의 lineNum이 다른곳에서 존재함. 공백생긴다.
                  //왼쪽문자가 오른쪽파일에 있다.
                    for(i=0;i<spaceNum;i++) {
                        if(line2.length() != 0) {
                           insert(second, Color.BLACK,Color.YELLOW,line2);
                        }
                        else {
                           insert(second, Color.BLACK,Color.YELLOW,whenNull);
                        }
                        insert(first, Color.BLACK,Color.GRAY,whenNull);
                        if(s2.hasNextLine()) {
                           line2 = s2.nextLine();
                        }
                     }
                     insert(first, Color.BLACK,Color.WHITE,line);
                     insert(second, Color.BLACK,Color.WHITE,line2);
               }
           }
            else if(line.length()==0 && line2.length()!=0) {//공백,~공백
               sameline = hasEqual(lineNum, line2, first);
               spaceNum =sameline-lineNum;
               
               if(spaceNum == 0) {//밑에 동일한거 없다. 그냥 다른거임 ex) s2
                  /*
                   * left line에 노란색 배경->공백에
                   * right line에 노란색 배경->스트링에
                   */
                  insert(first, Color.BLACK,Color.YELLOW, whenNull);
                  insert(second, Color.BLACK,Color.YELLOW, line2);
                  }
               else {//밑에 같은거 있다. 공백 생겨야됨
                  /*
                   * left line에 노란색들(공백들):spaceNum
                   * right line에 회색(엔터해주고) ->공백줄수만큼
                   */
                  for(i=0;i<spaceNum;i++) {
                     if(line.length() != 0) {
                        insert(first, Color.BLACK,Color.YELLOW, line);
                     }
                     else {
                        insert(first, Color.BLACK,Color.YELLOW, whenNull);
                     }
                     insert(second, Color.BLACK,Color.GRAY, whenNull);
                     if(s.hasNextLine()) {
                        line = s.nextLine();
                     }
                  }
                  insert(first, Color.BLACK,Color.WHITE, line);
                  insert(second, Color.BLACK,Color.WHITE, line2);
               }
            }
            else{//~공백, 공백
               sameline = hasEqual(lineNum, line, second);
               spaceNum =sameline-lineNum;
               if(spaceNum == 0) {//밑에 동일한거 없다. 그냥 다른거임 ex) s2
                  insert(first, Color.BLACK,Color.YELLOW, line);
                  insert(second, Color.BLACK,Color.YELLOW, whenNull);
                  }
               else {//밑에 같은거 있다. 공백 생겨야됨
                  for(i=0;i<spaceNum;i++) {
                     if(line2.length() != 0) {
                        insert(second, Color.BLACK,Color.YELLOW, line);
                     }
                     else {
                        insert(second, Color.BLACK,Color.YELLOW, whenNull);
                     }
                     insert(first, Color.BLACK,Color.GRAY, whenNull);
                     if(s2.hasNextLine()) {
                        line2 = s2.nextLine();
                     }
                  }
                  insert(first, Color.BLACK,Color.WHITE, line);
                  insert(second, Color.BLACK,Color.WHITE, line2);
               }
            }
         
   
      }
   

         else {

            //같은 문자 추가
            insert(first, Color.BLACK,Color.WHITE, line);
            insert(second, Color.BLACK,Color.WHITE, line2);
             System.out.println("identical line");
         }
         
   }
      //넣어줬던거 지워준다
      remove(first, offset);
      remove(second, offset2);
      
      reader.close();
      reader2.close();
}
   //a와 b의 동일한 문자 개수 출력

   //같은 문자의 개수를 출력해준다. 띄어쓰기도 문자로 본다.
   private int LCS(String a, String b) {
      LCStable= new int[a.length()+1][b.length()+1];
      int i,j;
   
      for(i=1; i<LCStable.length;i++) {
         for(j=1;j<LCStable[i].length;j++) {
            if(a.charAt(i-1)==b.charAt(j-1)) {
               LCStable[i][j] = LCStable[i-1][j-1]+1;
            }
            else {
               LCStable[i][j] = MAX(LCStable[i-1][j], LCStable[i][j-1]);
            }
         }
      }
      return LCStable[a.length()][b.length()];
   }

   private int MAX(int upper, int left) {
      return upper>left ? upper:left;
   }
   
   private int hasEqual(int l, String s, JTextPane j) throws IOException {

         StringReader read = new StringReader(j.getText());
         BufferedReader reader = new BufferedReader(read);
         Scanner r = new Scanner(reader);
         int no =l;
      for(int i=0; i<l;i++) {
         r.nextLine();
      }
      String lineTemp;
      while(r.hasNextLine()) {
        lineTemp = r.nextLine();
         l++;
         if(LCS(lineTemp, s)==s.length()) {
            return l;
         }
      }
      return no;
      
   }
   private int getOffset(JTextPane textP) {
      StyledDocument doc = textP.getStyledDocument();
      return doc.getLength();
   }
   
   private void remove(JTextPane textP,int fin) throws Exception {
      StyledDocument doc = textP.getStyledDocument();
      doc.remove(0, fin);
   }
   private void insert(JTextPane textP,Color foreG,Color backG, String line) throws Exception {
      
      StyledDocument doc = textP.getStyledDocument();
      Style style = textP.addStyle("String", null);
      StyleConstants.setForeground(style, foreG);//글자색 
      StyleConstants.setBackground(style, backG);//배경색 
      //넣는법고민...
      doc.insertString(doc.getLength(), line+"\n", style);
      
      //doc.setParagraphAttributes(arg0, line.length(), style, true);
   }

   //한 라인안에서 다른 부분 있을때 다른부분 색칠
   private void inLineDiff(String l, String l2, JTextPane tP, JTextPane tP2) throws Exception {
     String[] part = l.split("\\s");
     String[] part2 = l2.split("\\s");
     int temp;
    
     if(part.length>part2.length) {
        temp = part2.length;
     }
     else {
        temp = part.length;
     }
     for(int i=0; i<temp;i++) {
        if(LCS(part[i],part2[i])!=part[i].length())//단어가 같지않다
        {
           insert(tP,Color.RED,Color.ORANGE,part[i]);
           insert(tP2,Color.RED,Color.ORANGE,part2[i]); 
        }
        else {
           insert(tP,Color.BLACK,Color.YELLOW,part[i]);
           insert(tP2,Color.BLACK,Color.YELLOW,part2[i]);
        }
     }
   }
}
